(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{106:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return l}));var r=n(1),a=n(6),i=(n(0),n(150)),o={title:"Mock driver",description:"Mocking guide for redux-requests - declarative AJAX requests and automatic network state management for Redux"},c={id:"drivers/mock-driver",title:"Mock driver",description:"Mocking guide for redux-requests - declarative AJAX requests and automatic network state management for Redux",source:"@site/docs/drivers/mock-driver.md",permalink:"/docs/drivers/mock-driver",editUrl:"https://github.com/klis87/redux-requests/edit/master/docusaurus/docs/drivers/mock-driver.md",lastUpdatedBy:"klis87",lastUpdatedAt:1595253322,sidebar:"docs",previous:{title:"Promise driver",permalink:"/docs/drivers/promise-driver"},next:{title:"Actions",permalink:"/docs/guides/actions"}},s=[{value:"Introduction",id:"introduction",children:[]},{value:"Installation",id:"installation",children:[]},{value:"Usage",id:"usage",children:[]}],u={rightToc:s};function l(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"introduction"},"Introduction"),Object(i.b)("p",null,"This driver could be useful for tests or if you want to work on integration with an API endpoint\nwhich is not finished yet. It doesn't really do any requests, it just pretends to do them.\nWith the help of ",Object(i.b)("inlineCode",{parentName:"p"},"mock")," driver, instead of waiting for backend developers you can\nimmediately start working with ",Object(i.b)("inlineCode",{parentName:"p"},"mock"),' driver for some of your request actions and then\nyou could replace it with a "real" driver like ',Object(i.b)("inlineCode",{parentName:"p"},"axios")," once backend is ready."),Object(i.b)("h2",{id:"installation"},"Installation"),Object(i.b)("p",null,"To install the package, just run:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"$ npm install @redux-requests/mock\n")),Object(i.b)("p",null,"or you can just use CDN: ",Object(i.b)("inlineCode",{parentName:"p"},"https://unpkg.com/@redux-requests/mock"),"."),Object(i.b)("h2",{id:"usage"},"Usage"),Object(i.b)("p",null,"As always, pass it to ",Object(i.b)("inlineCode",{parentName:"p"},"handleRequests")," first:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"import { handleRequests } from '@redux-requests/core';\nimport { createDriver } from '@redux-requests/mock';\n\nhandleRequests({\n  driver: createDriver({\n    // optional, in ms, defining how much time mock request would take, useful for testing spinners\n    timeout: 1000,\n  }),\n});\n")),Object(i.b)("p",null,"Then, start using it inside your request actions:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"const fetchPhoto = id => ({\n  type: FETCH_PHOTO,\n  request: {\n    response: {\n      data: {\n        id,\n        title: 'accusamus beatae ad facilis cum similique qui sunt',\n      },\n    },\n  },\n});\n\nconst fetchPhotoWhichWillFail = id => ({\n  type: FETCH_PHOTO_WHICH_WILL_FAIL,\n  request: {\n    error: { status: 404 },\n  },\n});\n")),Object(i.b)("p",null,"Also note, that for mutations you need to pass ",Object(i.b)("inlineCode",{parentName:"p"},"meta.asMutation: true")," in your request actions,\nso the core library could know whether a request is a query or a mutation. For many drivers\nlike ",Object(i.b)("inlineCode",{parentName:"p"},"axios"),", ",Object(i.b)("inlineCode",{parentName:"p"},"fetch")," and ",Object(i.b)("inlineCode",{parentName:"p"},"graphql")," it is not usually necessary as the library can deduct\nwhether something is a query or a mutation by looking at request config, like ",Object(i.b)("inlineCode",{parentName:"p"},"GET")," request method\nwill be typically a query while ",Object(i.b)("inlineCode",{parentName:"p"},"POST")," a mutation."))}l.isMDXComponent=!0},150:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=a.a.createContext({}),l=function(e){var t=a.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):c({},t,{},e)),n},d=function(e){var t=l(e.components);return a.a.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=Object(r.forwardRef)((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=l(n),b=r,m=d["".concat(o,".").concat(b)]||d[b]||p[b]||i;return n?a.a.createElement(m,c({ref:t},u,{components:n})):a.a.createElement(m,c({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=b;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var u=2;u<i;u++)o[u]=n[u];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);