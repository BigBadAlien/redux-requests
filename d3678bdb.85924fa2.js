(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{143:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return a})),r.d(t,"metadata",(function(){return s})),r.d(t,"rightToc",(function(){return c})),r.d(t,"default",(function(){return u}));var n=r(1),o=r(6),i=(r(0),r(149)),a={title:"handleRequests"},s={id:"api-reference/handle-requests",title:"handleRequests",description:"As you probably noticed in other chapters, `handleRequests` is a function which gets some options",source:"@site/docs/api-reference/handle-requests.md",permalink:"/docs/api-reference/handle-requests",editUrl:"https://github.com/klis87/redux-requests/edit/master/docusaurus/docs/api-reference/handle-requests.md",lastUpdatedBy:"klis87",lastUpdatedAt:1595077872,sidebar:"docs",previous:{title:"RequestAction",permalink:"/docs/api-reference/request-action"},next:{title:"success",permalink:"/docs/api-reference/success"}},c=[{value:"<code>handleRequest</code> response object",id:"handlerequest-response-object",children:[{value:"<code>requestsReducer</code>",id:"requestsreducer",children:[]},{value:"<code>requestsMiddleware</code>",id:"requestsmiddleware",children:[]},{value:"<code>requestsPromise</code>",id:"requestspromise",children:[]}]},{value:"<code>handleRequest</code> options",id:"handlerequest-options",children:[{value:"<code>driver</code>",id:"driver",children:[]},{value:"<code>onRequest: (request, requestAction, store) =&gt; request</code>",id:"onrequest-request-requestaction-store--request",children:[]},{value:"<code>onSuccess: (response, requestAction, store) =&gt; response</code>",id:"onsuccess-response-requestaction-store--response",children:[]},{value:"<code>onError: (error, requestAction, store) =&gt; error</code>",id:"onerror-error-requestaction-store--error",children:[]},{value:"<code>onAbort: (requestAction, store) =&gt; void</code>",id:"onabort-requestaction-store--void",children:[]},{value:"<code>cache: boolean</code>",id:"cache-boolean",children:[]},{value:"<code>ssr: &#39;client&#39; | &#39;server&#39;</code>",id:"ssr-client--server",children:[]},{value:"<code>isRequestAction: action =&gt; boolean</code>",id:"isrequestaction-action--boolean",children:[]},{value:"<code>isRequestActionQuery: requestAction =&gt; boolean</code>",id:"isrequestactionquery-requestaction--boolean",children:[]},{value:"<code>takeLatest: boolean || requestAction =&gt; boolean</code>",id:"takelatest-boolean--requestaction--boolean",children:[]},{value:"<code>normalize: boolean</code>",id:"normalize-boolean",children:[]},{value:"<code>getNormalisationObjectKey: obj =&gt; string</code>",id:"getnormalisationobjectkey-obj--string",children:[]},{value:"<code>shouldObjectBeNormalized: obj =&gt; string</code>",id:"shouldobjectbenormalized-obj--string",children:[]}]}],l={rightToc:c};function u(e){var t=e.components,r=Object(o.a)(e,["components"]);return Object(i.b)("wrapper",Object(n.a)({},l,r,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"As you probably noticed in other chapters, ",Object(i.b)("inlineCode",{parentName:"p"},"handleRequests")," is a function which gets some options\nand returns an object with all the pieces necessary to pass to ",Object(i.b)("inlineCode",{parentName:"p"},"redux"),", like ",Object(i.b)("inlineCode",{parentName:"p"},"requestsReducer")," etc."),Object(i.b)("h2",{id:"handlerequest-response-object"},Object(i.b)("inlineCode",{parentName:"h2"},"handleRequest")," response object"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"handleRequests")," response object contains the following keys:"),Object(i.b)("h3",{id:"requestsreducer"},Object(i.b)("inlineCode",{parentName:"h3"},"requestsReducer")),Object(i.b)("p",null,"Ready to use reducer managing the whole remote state, you need to attach it\nto ",Object(i.b)("inlineCode",{parentName:"p"},"requests")," key in ",Object(i.b)("inlineCode",{parentName:"p"},"combineReducers"),"."),Object(i.b)("h3",{id:"requestsmiddleware"},Object(i.b)("inlineCode",{parentName:"h3"},"requestsMiddleware")),Object(i.b)("p",null,"A list of middleware you should pass to ",Object(i.b)("inlineCode",{parentName:"p"},"applyMiddleware"),". This list is dynamic and\ndepends on other options, like ",Object(i.b)("inlineCode",{parentName:"p"},"cache")," and ",Object(i.b)("inlineCode",{parentName:"p"},"ssr"),"."),Object(i.b)("h3",{id:"requestspromise"},Object(i.b)("inlineCode",{parentName:"h3"},"requestsPromise")),Object(i.b)("p",null,"A promise which is resolved after all requests are finished, only with ",Object(i.b)("inlineCode",{parentName:"p"},"ssr: 'server'")," option."),Object(i.b)("h2",{id:"handlerequest-options"},Object(i.b)("inlineCode",{parentName:"h2"},"handleRequest")," options"),Object(i.b)("h3",{id:"driver"},Object(i.b)("inlineCode",{parentName:"h3"},"driver")),Object(i.b)("p",null,"The only option which is required, a driver or object of drivers if you use multiple drivers."),Object(i.b)("h3",{id:"onrequest-request-requestaction-store--request"},Object(i.b)("inlineCode",{parentName:"h3"},"onRequest: (request, requestAction, store) => request")),Object(i.b)("p",null,"Function which will be called before request is made. It can be used to make some side effects,\nfor example with ",Object(i.b)("inlineCode",{parentName:"p"},"store.dispatch")," or to update request config by returning an updated one.\nSee ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"../tutorial/6-interceptors"}),"interceptors tutorial"),"."),Object(i.b)("h3",{id:"onsuccess-response-requestaction-store--response"},Object(i.b)("inlineCode",{parentName:"h3"},"onSuccess: (response, requestAction, store) => response")),Object(i.b)("p",null,"Function which will be called after successful response but before success action is dispatched.\nIt can be used to make some side effects or to update response by returning another one.\nSee ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"../tutorial/6-interceptors"}),"interceptors tutorial"),"."),Object(i.b)("h3",{id:"onerror-error-requestaction-store--error"},Object(i.b)("inlineCode",{parentName:"h3"},"onError: (error, requestAction, store) => error")),Object(i.b)("p",null,"Function which will be called after error response but before error action is dispatched.\nIt can be used to make some side effects or to update error by throwing another one.\nIt is also possible to recover from error by returning a response.\nSee ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"../tutorial/6-interceptors"}),"interceptors tutorial"),"."),Object(i.b)("h3",{id:"onabort-requestaction-store--void"},Object(i.b)("inlineCode",{parentName:"h3"},"onAbort: (requestAction, store) => void")),Object(i.b)("p",null,"Function which will be called after abort but before abort action is dispatched.\nUsually it won't be useful, but it is available just in case.\nSee ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"../tutorial/6-interceptors"}),"interceptors tutorial"),"."),Object(i.b)("h3",{id:"cache-boolean"},Object(i.b)("inlineCode",{parentName:"h3"},"cache: boolean")),Object(i.b)("p",null,"Set to ",Object(i.b)("inlineCode",{parentName:"p"},"true")," if you need to use caching. See ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"../tutorial/9-caching"}),"caching tutorial")," for more info."),Object(i.b)("h3",{id:"ssr-client--server"},Object(i.b)("inlineCode",{parentName:"h3"},"ssr: 'client' | 'server'")),Object(i.b)("p",null,"Pass ",Object(i.b)("inlineCode",{parentName:"p"},"server")," on the server and ",Object(i.b)("inlineCode",{parentName:"p"},"client")," on the client to activate server side rendering support.\nSee ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"../guides/server-side-rendering"}),"server side rendering guide"),"."),Object(i.b)("h3",{id:"isrequestaction-action--boolean"},Object(i.b)("inlineCode",{parentName:"h3"},"isRequestAction: action => boolean")),Object(i.b)("p",null,"Here you can adjust which actions are treated\nas request actions, usually you don't need to worry about it, it might be useful for custom drivers."),Object(i.b)("h3",{id:"isrequestactionquery-requestaction--boolean"},Object(i.b)("inlineCode",{parentName:"h3"},"isRequestActionQuery: requestAction => boolean")),Object(i.b)("p",null,"If this function returns true, request action is treated as query, if false, as mutation, probably only useful for custom drivers."),Object(i.b)("h3",{id:"takelatest-boolean--requestaction--boolean"},Object(i.b)("inlineCode",{parentName:"h3"},"takeLatest: boolean || requestAction => boolean")),Object(i.b)("p",null,"When ",Object(i.b)("inlineCode",{parentName:"p"},"true"),", if a request of a given type is pending and another one is fired, the first one will be\nautomatically aborted, which can prevent race condition bugs and improve performance, default as ",Object(i.b)("inlineCode",{parentName:"p"},"true")," for queries and ",Object(i.b)("inlineCode",{parentName:"p"},"false"),"\nfor mutations, which is usually what you want. See ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"../tutorial/1-requests-aborts"}),"abort tutorial")," for more info."),Object(i.b)("h3",{id:"normalize-boolean"},Object(i.b)("inlineCode",{parentName:"h3"},"normalize: boolean")),Object(i.b)("p",null,"By default ",Object(i.b)("inlineCode",{parentName:"p"},"false"),", pass ",Object(i.b)("inlineCode",{parentName:"p"},"true")," to turn on normalisation for all requests.\nSee ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"../tutorial/10-automatic-normalisation"}),"automatic normalisation tutorial")," for more info."),Object(i.b)("h3",{id:"getnormalisationobjectkey-obj--string"},Object(i.b)("inlineCode",{parentName:"h3"},"getNormalisationObjectKey: obj => string")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"obj => obj.id")," by default, useful only if you use normalisation.\nSee ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"../tutorial/10-automatic-normalisation"}),"automatic normalisation tutorial")," for more info."),Object(i.b)("h3",{id:"shouldobjectbenormalized-obj--string"},Object(i.b)("inlineCode",{parentName:"h3"},"shouldObjectBeNormalized: obj => string")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"obj => obj.id !== undefined")," by default, useful only if you use normalisation.\nSee ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"../tutorial/10-automatic-normalisation"}),"automatic normalisation tutorial")," for more info."))}u.isMDXComponent=!0},149:function(e,t,r){"use strict";r.d(t,"a",(function(){return b})),r.d(t,"b",(function(){return h}));var n=r(0),o=r.n(n);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=o.a.createContext({}),u=function(e){var t=o.a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s({},t,{},e)),r},b=function(e){var t=u(e.components);return o.a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},p=Object(n.forwardRef)((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,a=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),b=u(r),p=n,h=b["".concat(a,".").concat(p)]||b[p]||d[p]||i;return r?o.a.createElement(h,s({ref:t},l,{components:r})):o.a.createElement(h,s({ref:t},l))}));function h(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,a=new Array(i);a[0]=p;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:n,a[1]=s;for(var l=2;l<i;l++)a[l]=r[l];return o.a.createElement.apply(null,a)}return o.a.createElement.apply(null,r)}p.displayName="MDXCreateElement"}}]);