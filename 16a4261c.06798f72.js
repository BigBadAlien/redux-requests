(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{104:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return d}));var r=n(1),o=n(6),a=(n(0),n(154)),i={id:"motivation",title:"Motivation",description:"Motivation guide for redux-requests - declarative AJAX requests and automatic network state management for Redux"},s={id:"introduction/motivation",title:"Motivation",description:"Motivation guide for redux-requests - declarative AJAX requests and automatic network state management for Redux",source:"@site/docs/introduction/motivation.md",permalink:"/docs/introduction/motivation",editUrl:"https://github.com/klis87/redux-requests/edit/master/docusaurus/docs/introduction/motivation.md",lastUpdatedBy:"klis87",lastUpdatedAt:1595253322,sidebar:"docs",next:{title:"Installation",permalink:"/docs/introduction/installation"}},c=[{value:"Genesis",id:"genesis",children:[]},{value:"The solution",id:"the-solution",children:[]}],u={rightToc:c};function d(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"genesis"},"Genesis"),Object(a.b)("p",null,"Even in 21st century, making AJAX requests and management of remote state is surprisingly hard!\nIt looks easy at the beginning, but the more experienced you become, the more aware you are\nabout problems you didn't consider before. Race conditions, requests aborts, caching, optimistic updates,\nerror handling, showing spinners for loading state per request, server side rendering...\nThis list could go on... You could solve all of those problems on the app level yourself,\nbut think about code amount to achieve it, or potential bugs you could have when having to\nworry about so many things, especially with tight deadlines. Should we really worry about\nthose on the app level?"),Object(a.b)("h2",{id:"the-solution"},"The solution"),Object(a.b)("p",null,"With ",Object(a.b)("inlineCode",{parentName:"p"},"redux-requests"),", assuming you use ",Object(a.b)("inlineCode",{parentName:"p"},"axios")," you could refactor a code in the following way:"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-diff"}),"  import axios from 'axios';\n- import thunk from 'redux-thunk';\n+ import { handleRequests } from '@redux-requests/core';\n+ import { createDriver } from '@redux-requests/axios'; // or another driver\n\n\n  const FETCH_BOOKS = 'FETCH_BOOKS';\n- const FETCH_BOOKS_SUCCESS = 'FETCH_BOOKS_SUCCESS';\n- const FETCH_BOOKS_ERROR = 'FETCH_BOOKS_ERROR';\n-\n- const fetchBooksRequest = () => ({ type: FETCH_BOOKS });\n- const fetchBooksSuccess = data => ({ type: FETCH_BOOKS_SUCCESS, data });\n- const fetchBooksError = error => ({ type: FETCH_BOOKS_ERROR, error });\n\n- const fetchBooks = () => dispatch => {\n-   dispatch(fetchBooksRequest());\n-\n-   return axios.get('/books').then(response => {\n-     dispatch(fetchBooksSuccess(response.data));\n-     return response;\n-   }).catch(error => {\n-     dispatch(fetchBooksError(error));\n-     throw error;\n-   });\n- }\n\n+ const fetchBooks = () => ({\n+   type: FETCH_BOOKS,\n+   request: {\n+     url: '/books',\n+     // you can put here other Axios config attributes, like method, data, headers etc.\n+   },\n+ });\n\n- const defaultState = {\n-   data: null,\n-   pending: 0, // number of pending FETCH_BOOKS requests\n-   error: null,\n- };\n-\n- const booksReducer = (state = defaultState, action) => {\n-   switch (action.type) {\n-     case FETCH_BOOKS:\n-       return { ...defaultState, pending: state.pending + 1 };\n-     case FETCH_BOOKS_SUCCESS:\n-       return { ...defaultState, data: action.data, pending: state.pending - 1 };\n-     case FETCH_BOOKS_ERROR:\n-       return { ...defaultState, error: action.error, pending: state.pending - 1 };\n-     default:\n-       return state;\n-   }\n- };\n\n  const configureStore = () => {\n+   const { requestsReducer, requestsMiddleware } = handleRequests({\n+     driver: createDriver(axios),\n+   });\n+\n    const reducers = combineReducers({\n-     books: booksReducer,\n+     requests: requestsReducer,\n    });\n\n    const store = createStore(\n      reducers,\n-     applyMiddleware(thunk),\n+     applyMiddleware(...requestsMiddleware),\n    );\n\n    return store;\n  };\n")),Object(a.b)("p",null,"As you can see, with ",Object(a.b)("inlineCode",{parentName:"p"},"redux-requests"),", you no longer need to define error and success actions to do things like error handling\nor showing loading spinners. You don't need to write requests related repetitive sagas and reducers either.\nYou don't even need to worry about writing selectors, as this library provides optimized selectors out of the box.\nWith action helper library like ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/klis87/redux-smart-actions"}),Object(a.b)("inlineCode",{parentName:"a"},"redux-smart-actions")),", you don't even need to write constants!\nSo basically you end up writing just actions to manage your whole remote state, so no more famous boilerplate in your Redux apps!"))}d.isMDXComponent=!0},154:function(e,t,n){"use strict";n.d(t,"a",(function(){return l})),n.d(t,"b",(function(){return f}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=o.a.createContext({}),d=function(e){var t=o.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):s({},t,{},e)),n},l=function(e){var t=d(e.components);return o.a.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},b=Object(r.forwardRef)((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),l=d(n),b=r,f=l["".concat(i,".").concat(b)]||l[b]||p[b]||a;return n?o.a.createElement(f,s({ref:t},u,{components:n})):o.a.createElement(f,s({ref:t},u))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=b;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var u=2;u<a;u++)i[u]=n[u];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);