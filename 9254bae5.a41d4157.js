(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{127:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return p})),n.d(t,"default",(function(){return d}));var a=n(1),r=n(6),o=(n(0),n(149)),i={title:"8. Optimistic updates",description:"8th part of the tutorial for redux-requests - declarative AJAX requests and automatic network state management for Redux"},c={id:"tutorial/8-optimistic-updates",title:"8. Optimistic updates",description:"8th part of the tutorial for redux-requests - declarative AJAX requests and automatic network state management for Redux",source:"@site/docs/tutorial/8-optimistic-updates.md",permalink:"/docs/tutorial/8-optimistic-updates",editUrl:"https://github.com/klis87/redux-requests/edit/master/docusaurus/docs/tutorial/8-optimistic-updates.md",lastUpdatedBy:"klis87",lastUpdatedAt:1595116360,sidebar:"docs",previous:{title:"7. Local updates",permalink:"/docs/tutorial/7-local-updates"},next:{title:"9. Caching",permalink:"/docs/tutorial/9-caching"}},p=[],u={rightToc:p};function d(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Sometimes you don't want to wait for a mutation response to update your data. This\ncan improve perceived performance of your app. If you can predict in advance how data will be updated,\nyou might want to update it immediately. For that you can use ",Object(o.b)("strong",{parentName:"p"},"optimistic updates"),".\nSee an example:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"const deleteBookOptimistic = book => ({\n  type: DELETE_BOOK_OPTIMISTIC,\n  request: {\n    url: `/book/${book.id}`,\n    method: 'delete',\n  },\n  meta: {\n    mutations: {\n      FETCH_BOOKS: {\n        updateDataOptimistic: data => data.filter(v => v.id !== book.id),\n        revertData: data => [book, ...data],\n      },\n    },\n  },\n});\n")),Object(o.b)("p",null,"So, above we have a mutation action with optimistic update for ",Object(o.b)("inlineCode",{parentName:"p"},"FETCH_BOOKS")," query.\n",Object(o.b)("inlineCode",{parentName:"p"},"updateDataOptimistic")," is called right away after ",Object(o.b)("inlineCode",{parentName:"p"},"DELETE_BOOK_OPTIMISTIC")," action is dispatched,\nso not on success like in case for ",Object(o.b)("inlineCode",{parentName:"p"},"updateData"),"."),Object(o.b)("p",null,"Also, notice ",Object(o.b)("inlineCode",{parentName:"p"},"revertData")," key. Because we use optimistic data update, we need to be ready for an error, which\nalways could happen. ",Object(o.b)("inlineCode",{parentName:"p"},"revertData")," allows you to update ",Object(o.b)("inlineCode",{parentName:"p"},"data")," to the previous state.\n",Object(o.b)("inlineCode",{parentName:"p"},"revertData")," is called on ",Object(o.b)("inlineCode",{parentName:"p"},"DELETE_BOOK_OPTIMISTIC_ERROR"),",\nso you can amend the data and revert deletion in case of an unpredicted error."),Object(o.b)("p",null,"At the very same time you can still use ",Object(o.b)("inlineCode",{parentName:"p"},"updateData")," to further update data on ",Object(o.b)("inlineCode",{parentName:"p"},"DELETE_BOOK_OPTIMISTIC_SUCCESS"),".\nThis might be useful if you cannot predict data update fully. For example you might\nwant to do optimistic update to add an item with random id and amend it to a proper\nvalue once mutation response is delivered."))}d.isMDXComponent=!0},149:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return b}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=r.a.createContext({}),d=function(e){var t=r.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):c({},t,{},e)),n},s=function(e){var t=d(e.components);return r.a.createElement(u.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),s=d(n),m=a,b=s["".concat(i,".").concat(m)]||s[m]||l[m]||o;return n?r.a.createElement(b,c({ref:t},u,{components:n})):r.a.createElement(b,c({ref:t},u))}));function b(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var u=2;u<o;u++)i[u]=n[u];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);